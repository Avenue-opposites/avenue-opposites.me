---
import type { CollectionEntry } from 'astro:content'
import type { HTMLAttributes } from 'astro/types'
import FormattedDate from '../FormattedDate.astro'

type Props = HTMLAttributes<'a'> & CollectionEntry<'notes'>['data']

const { title, description, publishDate, heroImage, duration, tags, lang, class: className, ...props } = Astro.props;
---

<a
	class:list={[
		`daisy-card shadow-lg overflow-hidden 
		group
		ring-1 ring-base-300 hover:ring-primary
		relative p-0.5 transition-shadow
		befoer:content-[''] before:absolute
		before:inset-0`, 
		className
	]}
	{...props}
>
	<div class="daisy-card-body bg-base-100 group-hover:bg-opacity-90 rounded-2xl relative z-[1]">
		{
			heroImage && 
			(
				<figure class="rounded-xl">
					<img class="daisy-image-full" src={heroImage} alt="" />
				</figure>
			)
		}
		<h1 class="mt-2 daisy-card-title flex-wrap lg:text-2xl">
			{title}
			{lang.startsWith('zh') && <span class="daisy-badge items-stretch daisy-badge-neutral">中文</span>}
		</h1>
		<p class="text-neutral text-sm">
			<FormattedDate date={publishDate} />
				· {duration}
		</p>
		<p class="sm:text-lg multi-ellipsis-[3]">{description}</p>
		{
			tags &&
				<div class="flex flex-wrap gap-2">
					{tags.map((tag) => <span class="daisy-badge daisy-badge-outline daisy-badge-primary">{tag}</span>)}
				</div>
		}
	</div>
</a>