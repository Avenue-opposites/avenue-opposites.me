---
import CoordinateSystem from './CoordinateSystem.astro'

// 直线的两个端点
export const points = [
	{ x: 20, y: 80, radius: 1.5 },
	{ x: 80, y: 20, radius: 1.5 },
]
---

<svg id="bezier-curve-one-demo" class="svg-markdown" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100">
	<CoordinateSystem 
		viewBox="0 0 100 100" 
		unit={10} 
		strokeWidth={0.5}
		points={points}
	>
		<line x1="20" y1="80" x2="80" y2="20" class="stroke-primary" stroke-width="1" />
		<g slot="tooltip">
			<text x="14" y="85" class="fill-accent" font-size="4">p1</text>
			<text x="82" y="15" class="fill-accent" font-size="4">p2</text>
			<text data-p3 x="15" y="75" class="fill-accent" font-size="4">p3</text>
			<text data-t x="52" y="55" class="fill-primary" font-size="4">t = 0</text>
			<circle data-p3-point cx="20" cy="80" r="1.5" class="fill-base-content" />
		</g>
	</CoordinateSystem>
</svg>

<script>
import gsap from 'gsap'
import TextPlugin from 'gsap/TextPlugin'
import { tweenCommonOptions } from './bezier'

gsap.registerPlugin(TextPlugin)
const demo = document.getElementById('bezier-curve-one-demo')!
const p3 = demo.querySelector('text[data-p3]')!
const p3Point = demo.querySelector('circle[data-p3-point]')!

// eslint-disable-next-line no-undef
const tweens: GSAPTween[] = [
  	gsap.to(p3, { attr: { x: 75, y: 15 }, ...tweenCommonOptions }),
  	gsap.to(p3Point, { attr: { cx: 80, cy: 20 }, ...tweenCommonOptions }),
]
const timeline = gsap.timeline({
  	repeat: -1,
  	yoyo: true,
  	dealy: 1,
  	// eslint-disable-next-line no-undef
  	onUpdate(p3: GSAPTween) {
		  gsap.set('#bezier-curve-one-demo text[data-t]', { 
			  text: 't = ' + p3.progress().toFixed(1),
		  })
  	},
  	onUpdateParams: [tweens[1]]
})

timeline.add(tweens)
</script>